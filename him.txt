------------server.js----------
const express = require('express')
const cors = require('cors')
const mongoos = require('mongoose')
const app = express()
const route = require('./routes/ticket_route')
const theaterRoute = require('./routes/info_route')
mongoos.connect("mongodb://localhost:27017/tickets")

app.use(express.json())
app.use(cors())
app.use('/tickets', route)
app.use('/theater', theaterRoute)

app.listen(5000, () => {
    console.log("Server Running.....")
})

--------------ticket_model.js------------
const mongoose = require('mongoose')
const ticketsSchema = mongoose.Schema({
    name: {
        type: String,
        required: true
    },
    password: {
        type: String,
        required: true
    },
    number: {
        type: String,
        required: true
    }
})
module.exports = mongoose.model('ticket_master', ticketsSchema)

-------------------theater_model.js------------------
const mongoose = require('mongoose')
const infoSchema = mongoose.Schema({
    info: {
        type: String,
        required: true
    },
    availableshow: {
        type: String,
        required: true
    },
    tickets: {
        type: Number,
        required: true
    }

})
module.exports = mongoose.model('theater_master', infoSchema)
-------------------------------------------------------
-------------------booking_model.js----------------
const mongoose = require('mongoose')
const infoSchema = mongoose.Schema({
    info: {
        type: String,
        required: true
    },
    availableshow: {
        type: String,
        required: true
    },
    tickets: {
        type: Number,
        required: true
    }

})
module.exports = mongoose.model('theater_master', infoSchema)
----------------------ticket_route.js-----------
const express = require('express')
const route = express.Router()
const schema = require('../model/ticket_model')


route.post('/register', (req, res) => {
    const list = new schema({
        name: req.body.name,
        password: req.body.password,
        number: req.body.number
    })
    list.save()
    res.send(true)
})

route.post('/login', async (req, res) => {
    const list = await schema.findOne(req.body)
    res.send(list)
})

module.exports = route
--------------------------------
--------------info_route-------------
const express = require('express')
const route = express.Router()
const schema = require('../model/theater_model')
const bookschema = require('../model/booking_model')


route.post('/insertInfo', (req, res) => {
    const list = new schema({
        info: req.body.info,
        availableshow: req.body.availableshow,
        tickets: req.body.tickets
    })
    list.save()
    res.send(true)
})

route.get('/getInfo', async (req, res) => {
    const list = await schema.find()
    res.send(list)
})

route.post('/updateInfo', async (req, res) => {
    const list = await schema.findByIdAndUpdate(req.body.id, req.body, { new: true })
    res.send(list)
})

route.post('/booktickets', async (req, res) => {
    const list = new bookschema({
        name: req.body.name,
        info: req.body.info,
        show: req.body.show,
        tickets: req.body.tickets
    })
    list.save()
    res.send(true)
})
route.post('/getUserBooking', async (req, res) => {
    const list = await bookschema.findOne(req.body)
    res.send(list)
})

module.exports = route
-----------------------------
-------------test.rest---------
POST http://localhost:5000/tickets/register
content-type: application/json

{
    "name": "divy",
    "password": "123",
    "number": "123456789"
}

###
POST http://localhost:5000/tickets/login
content-type: application/json

{
    "name": "himanshu",
    "password": "123"
}


###
POST http://localhost:5000/theater/insertInfo
content-type: application/json

{
    "info": "Rahul Raj Mall",
    "availableshow": "An Action Hero",
    "tickets": 15
}


###
GET http://localhost:5000/theater/getInfo
content-type: application/json

###
POST http://localhost:5000/theater/insertInfo
content-type: application/json

{
    "info": "VR Mall",
    "availableshow": "An Action Hero",
    "tickets": 15
}

###
POST http://localhost:5000/theater/booktickets
content-type: application/json

{
    "name": "himanshu",
    "info": "VR Mall",
    "show": "An Action Hero",
    "tickets": 5
}

###
POST http://localhost:5000/theater/updateInfo
content-type: application/json

{
    "id": "638f6051457b35dcd549fd0b",
    "tickets": 10
}

###
POST http://localhost:5000/theater/getUserBooking
content-type: application/json

{
    "name": "himanshu"
}


